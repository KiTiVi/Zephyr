FORMAT: 1A
HOST: http://polls.apiblueprint.org/

# Zephyr

Zephyr är ett API vars funktioner ger användaren en musiklista väl anpassad till
det nuvarande vädret. Det är en mobil applikaion där användaren anger  vilken ort
hen befinner sig på. Ortsnamnet skickas med som parameter till Google maps API och
returnerar de korrekta kordinaterna som därefter skickas vidare till SMHI´s API. SMHI
returnerar den aktuella temperaturen samt vilket väder det är just nu. Det finns 15
olika väderalternativ, från helt klart till åska. Vädret anger ett specifikt "moode"
till spotify som returnerar en passande spellista. Användaren får på egen hand logga 
in på spotify och Zephyr har inte någon delaktighet i den inloggningen. Alla svar 
från de tre API:n skickas i JSON. Applikationen är byggd i python, HTML och CSS.


## Koordinater [/'https://maps.googleapis.com/maps/api/geocode/json?address='+ city + '&key=' + api_key]
Med namnet på vald stad kan rätt koordinater hämntas från Google maps API. För att få åtkomst till
Google maps API krävs en API_KEY. Denne ska skickas med i förfrågan för att Google maps ska returnera
koordinaterna. I den Json som returneras kommer "lat" och "lng" att hämtas ut. De finns under 
'Geometry', 'Location'.

### Hämta vald stads koordinater från SMHI [GET]
+ parameters 
    + city: I följande exempel är den valda parametern Malmö. 
    City är en variabel som innehåller namne på den stad som användaren har angivit i
    ett formulär att hen befinner sig i. Variabeln skickas med som parameter till
    till funktionen get_coordinates där koordinaterna ska returneras (`1`)
+ response 200 (application/json)
        [   
            {
                'address_components': [
                        {
                            'long_name': 'Malmö', 
                            'short_name': 'Malmö', 
                            'types': [
                                'locality', 
                                'political'
                            ]
                        }, 
                        {
                            'long_name': 'Skåne County', 
                            'short_name': 'Skåne County', 
                            'types': [
                                'administrative_area_level_1', 
                                'political'
                            ]
                        },
                        {
                            'long_name': 'Sweden', 
                            'short_name': 'SE', 
                            'types': [
                                'country', 
                                'political'
                            ]
                        }
                ], 
                'formatted_address': 'Malmö, Sweden', 
                'geometry': {
                    'bounds': {
                        'northeast': {
                            'lat': 55.639951, 
                            'lng': 13.1507609
                        }, 
                        'southwest': {
                            'lat': 55.500386, 
                            'lng': 12.8811839
                        }
                    }, 
                    'location': {
                        'lat': 55.604981, 
                        'lng': 13.003822
                    }, 
                    'location_type': 'APPROXIMATE', 
                    'viewport': {
                        'northeast': {
                            'lat': 55.639951, 
                            'lng': 13.1507609
                        }, 
                        'southwest': {
                            'lat': 55.500386, 
                            'lng': 12.8811839
                        }
                    }
                }, 
                'place_id': 'ChIJ_5HEdKUFU0YR5YhIvd8FqdM', 
                'types': [
                    'locality', 'political'
                ]
            }
        ]
+ response 404 (html)
to be continued in this fantastic farytail


## Giltig tid [/'opendata-download-metfcst.smhi.se/api/category/pmp3g/version/2/validtime.json']
När ett GET-anrop görs till SMHI för att hämta väderinformation returneras ett väldigt stort
stycke JSON. Stor del av informationen är onödig och därför görs först det här anropet där den 
aktuella tiden hämtas ut. En lista på alla dygnets timmar finns tillgänglig och den första som
är den närmast aktuell tid hämtas ut. Med den specifika tiden är det möjligt att i nästa anrop hämta ut
endast den aktuella väderinformationen. 

### Hämta giltig tid [GET]

+ response 200 (application/json)
        {
            "validTime":[
                "2017-10-27T22:00:00Z",
                "2017-10-27T23:00:00Z",
                "2017-10-28T00:00:00Z",
                "2017-10-28T01:00:00Z",
                "2017-10-28T02:00:00Z",
                "2017-10-28T03:00:00Z",
                "2017-10-28T04:00:00Z",
                "2017-10-28T05:00:00Z",
                "2017-10-28T06:00:00Z",
                "2017-10-28T07:00:00Z",
                "2017-10-28T08:00:00Z",
                "2017-10-28T09:00:00Z",
                "2017-10-28T10:00:00Z",
                "2017-10-28T11:00:00Z",
                "2017-10-28T12:00:00Z",
                "2017-10-28T13:00:00Z",
                "2017-10-28T14:00:00Z",
                "2017-10-28T15:00:00Z",
                "2017-10-28T16:00:00Z",
                "2017-10-28T17:00:00Z",
                "2017-10-28T18:00:00Z",
                "2017-10-28T19:00:00Z",
                "2017-10-28T20:00:00Z",
                "2017-10-28T21:00:00Z",
                "2017-10-28T22:00:00Z",
                "2017-10-28T23:00:00Z",
                "2017-10-29T00:00:00Z",
                "2017-10-29T01:00:00Z",
                "2017-10-29T02:00:00Z",
                "2017-10-29T03:00:00Z",
                "2017-10-29T04:00:00Z",
                "2017-10-29T05:00:00Z",
                "2017-10-29T06:00:00Z",
                "2017-10-29T07:00:00Z",
                "2017-10-29T08:00:00Z",
                "2017-10-29T09:00:00Z",
                "2017-10-29T10:00:00Z",
                "2017-10-29T11:00:00Z",
                "2017-10-29T12:00:00Z",
                "2017-10-29T15:00:00Z",
                "2017-10-29T18:00:00Z",
                "2017-10-29T21:00:00Z",
                "2017-10-30T00:00:00Z",
                "2017-10-30T06:00:00Z",
                "2017-10-30T12:00:00Z",
                "2017-10-30T18:00:00Z",
                "2017-10-31T00:00:00Z",
                "2017-10-31T06:00:00Z",
                "2017-10-31T12:00:00Z",
                "2017-10-31T18:00:00Z",
                "2017-11-01T00:00:00Z",
                "2017-11-01T06:00:00Z",
                "2017-11-01T12:00:00Z",
                "2017-11-01T18:00:00Z",
                "2017-11-02T00:00:00Z",
                "2017-11-02T06:00:00Z",
                "2017-11-02T12:00:00Z",
                "2017-11-03T00:00:00Z",
                "2017-11-03T12:00:00Z",
                "2017-11-04T00:00:00Z",
                "2017-11-04T12:00:00Z",
                "2017-11-05T00:00:00Z",
                "2017-11-05T12:00:00Z",
                "2017-11-06T00:00:00Z"
                ]
            }


## Väderprognos [/'opendata-download-metfcst.smhi.se/api/category/pmp2g/version/2/geotype/point/lon/' + longitude + '/lat/' + latitude + '/data.json']
En GET-föfrågan görs till smhi´s API med parametrarna longitude och latitude från Google maps
API samt ValidTime som har hämtats i föregående anrop till SMHI. Av all returnerad JSON hämtas två
parametrar ut. 'name': 't' anger den aktuella temperaturen och 'name': 'Wsymb' anger
vädersymbolen för vädret. Båda dessa parametrar sparas och används i html/css presentationen för
användaren i resultatet.

### Hämta vald stads koordinater från SMHI [GET]
+ parameters 
    + longitude: I följande exempel är longitude 13.003822. 
    Longitude hämtas från den JSON som returneras från Google maps API. Den finns under Geometry,
    location, ***lng***. För att 'lng' ska fungera i SMHI´s API sätts en maxgräns på 6 decimaler.(`2`)
    + latitude: I följande exempel är latitude 55.604981. 
    Latitude hämtas från den JSON som returneras från Google maps API. Den finns under Geometry, location, ***lat***. För att 'lat'
    ska fungera i SMHI´s API sätts en maxgräns på 6 decimaler.(`3`)
    + validTime: I följande exempel på "response 200" visas endast validTime: 2017 10 25T22:00:00Z. 
    Det eftersom den fullständiga JSON som egentligen returneras anger alla väderattribut för
    varje timme. (`4`)
+ response 200 (application/json)
        {   
            'validTime': '2017-10-25T22:00:00Z', 
            'parameters': [
                {
                    'name': 'msl', 
                    'levelType': 'hmsl', 
                    'level': 0, 
                    'unit': 'hPa', 
                    'values': [
                        1015.5
                    ]
                }, 
                {
                    'name': 't', 
                    'levelType': 'hl', 
                    'level': 2, 
                    'unit': 'Cel', 
                    'values': [
                        11.6
                    ]
                }, 
                {   
                    'name': 'vis', 
                    'levelType': 'hl', 
                    'level': 2, 
                    'unit': 'km', 
                    'values': [
                        10.8
                    ]
                }, 
                {
                    'name': 'wd', 
                    'levelType': 'hl', 
                    'level': 10, 
                    'unit': 'degree', 
                    'values': [
                        278
                    ]
                }, 
                {
                    'name': 'ws', 
                    'levelType': 'hl', 
                    'level': 10, 
                    'unit': 'm/s', 
                    'values': [
                        6.4
                    ]
                }, 
                {   
                    'name': 'r', 
                    'levelType': 'hl', 
                    'level': 2, 
                    'unit': 'percent', 
                    'values':[
                        84
                    ]
                }, 
                {   
                    'name': 'tstm', 
                    'levelType': 'hl', 
                    'level': 0, 
                    'unit': 'percent',
                    'values': [
                        0
                    ]
                }, 
                {
                    'name': 'tcc_mean', 
                    'levelType': 'hl', 
                    'level': 0, 
                    'unit': 'octas', 
                    'values': [
                        8
                    ]
                }, 
                {   
                    'name': 'lcc_mean', 
                    'levelType': 'hl', 
                    'level': 0, 
                    'unit': 'octas', 
                    'values': [
                        8
                    ]
                }, 
                {
                    'name': 'mcc_mean', 
                    'levelType': 'hl', 
                    'level': 0, 
                    'unit': 'octas', 
                    'values': [
                        0
                    ]
                }, 
                {
                    'name': 'hcc_mean', 
                    'levelType': 'hl', 
                    'level': 0, 
                    'unit': 'octas', 
                    'values': [
                        1
                    ]
                }, 
                {
                    'name': 'gust', 
                    'levelType': 'hl', 
                    'level': 10, 
                    'unit': 'm/s', 
                    'values': [
                        12.6
                    ]
                }, 
                {   
                    'name': 'pmin', 
                    'levelType': 'hl', 
                    'level': 0, 
                    'unit': 'kg/m2/h', 
                    'values': [
                        0.0
                    ]
                }, 
                {
                    'name': 'pmax', 
                    'levelType': 'hl', 
                    'level': 0, 
                    'unit': 'kg/m2/h', 
                    'values': [
                        0.0
                    ]
                }, 
                {
                    'name': 'spp', 
                    'levelType': 'hl', 
                    'level': 0, 
                    'unit': 'percent', 
                    'values': [
                        -9
                    ]
                }, 
                {   
                    'name': 'pcat', 
                    'levelType': 'hl', 
                    'level': 0, 
                    'unit': 'category', 
                    'values': [
                        0
                    ]
                }, 
                {
                    'name': 'pmean', 
                    'levelType': 'hl', 
                    'level': 0, 
                    'unit': 'kg/m2/h', 
                    'values': [
                        0.0
                    ]
                }, 
                {
                    'name': 'pmedian', 
                    'levelType': 'hl', 
                    'level': 0, 
                    'unit': 'kg/m2/h', 
                    'values': [
                        0.0
                    ]
                }, 
                {
                    'name': 'Wsymb', 
                    'levelType': 'hl', 
                    'level': 0, 
                    'unit': 'category', 
                    'values': [
                        4
                    ]
                }
            ]
        },
+ response 404
to be continuued

## Tillgång till spotify [/'url, data=body_params, auth = (client_id, client_secret)']
För att få tillgång till spotify´s API måste några parametrar hämtas in. Dessa kommer sedan samlas
i en variabel som skickas med i nästa anrop till spotify.
### Skapa tillgång till spotify [POST]
+ parameters
    + Url: 'https://accounts.spotify.com/api/token'
    Anropet till APIt utgår ifrån en specifik URL som är följande: 
    + Body params: grant_type: client_credentials}
    Fölljande parameter är nödvändig för att anropet till Spotify ska lyckas.
    + Client id: Zephyrs specifika client id är: 'c7c574d9d26b448789d562cc1af24406'
    För att Zephyr ska få tillgång till Spotifys API krävs ett unikt client id.
    + Client secret: Zephyrs specifika client secret är: '4082946357c043c2b959cfb557337f27'
    För att Zephyr ska få tillgång till Spotifys API krävs ett unikt client secret.

## Spotify [/'api.spotify.com/v1/search/?q=" + mood + "&type=playlist&limit=1", headers={"Authorization": "Bearer " + token}']

### Hämta  [GET]
+ parameters 
    + mood
    + token
+ response 200 (application/json)